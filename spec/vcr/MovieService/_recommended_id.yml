---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/1573/recommendations?api_key=<API_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 20 Oct 2021 17:39:53 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - MISS, STORE
      X-Memc-Key:
      - 70cebbd6a8ffb8fc940c732fb0a18a000eb4a744
      X-Memc-Age:
      - '0'
      X-Memc-Expires:
      - '15290'
      Etag:
      - W/"48b3e9d7543b20af44c8f482a1f13f12"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ef8f66c83aecd87910ce2e1153544a21.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SEA19-C3
      X-Amz-Cf-Id:
      - rN-F_26bbgYkPE5yCNyI-z1Jkkp-dNRtW2rrnoBR6Mq0S5_bny15tg==
      Age:
      - '46'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 20 Oct 2021 17:40:39 GMT
recorded_with: VCR 6.0.0
