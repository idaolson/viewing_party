---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/upcoming?api_key=<API_KEY>&language=en-US&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 20 Oct 2021 17:39:58 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ef8f66c83aecd87910ce2e1153544a21.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SEA19-C3
      X-Amz-Cf-Id:
      - iG7ivk5BXGtnutFkjwlB_0-dMYrmSN9VqWIBDj74Ydeuf6Eh1uV9RQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 20 Oct 2021 17:39:58 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/upcoming?api_key=<API_KEY>&language=en-US&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 20 Oct 2021 17:39:59 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 f958a3846d80a3925f664b320dfad9c9.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SEA19-C3
      X-Amz-Cf-Id:
      - De7qSldumlp-gmcL-u91J2_UqU9TrMDJ19Y0_FeYlz_IAVASlelFvw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 20 Oct 2021 17:39:59 GMT
recorded_with: VCR 6.0.0
