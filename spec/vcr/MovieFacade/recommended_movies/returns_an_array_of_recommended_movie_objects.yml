---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/1573/recommendations?api_key=<API_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 19 Oct 2021 17:20:27 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - MISS, STORE
      X-Memc-Key:
      - 70cebbd6a8ffb8fc940c732fb0a18a000eb4a744
      X-Memc-Age:
      - '0'
      X-Memc-Expires:
      - '17022'
      Etag:
      - W/"2730560b3688c198eb966d730efba60f"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 d9d5880faa1278f1716f3a60dd93de57.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - JFK51-C1
      X-Amz-Cf-Id:
      - yvNDzpfRaCQ9paiGDWM1qMmRH_jEmAbWc63ObqygUSfOrAVRLYAWYw==
      Age:
      - '977'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 19 Oct 2021 17:36:44 GMT
recorded_with: VCR 6.0.0
